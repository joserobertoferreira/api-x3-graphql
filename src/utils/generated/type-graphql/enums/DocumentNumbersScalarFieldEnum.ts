import * as TypeGraphQL from "type-graphql";

export enum DocumentNumbersScalarFieldEnum {
  UPDTICK_0 = "UPDTICK_0",
  sequenceCode = "sequenceCode",
  lengthOf = "lengthOf",
  definitionLevel = "definitionLevel",
  rtzLevel = "rtzLevel",
  type = "type",
  numberOfComponents = "numberOfComponents",
  componentType1 = "componentType1",
  componentType2 = "componentType2",
  componentType3 = "componentType3",
  componentType4 = "componentType4",
  componentType5 = "componentType5",
  componentType6 = "componentType6",
  componentType7 = "componentType7",
  componentType8 = "componentType8",
  componentType9 = "componentType9",
  componentType10 = "componentType10",
  componentLength1 = "componentLength1",
  componentLength2 = "componentLength2",
  componentLength3 = "componentLength3",
  componentLength4 = "componentLength4",
  componentLength5 = "componentLength5",
  componentLength6 = "componentLength6",
  componentLength7 = "componentLength7",
  componentLength8 = "componentLength8",
  componentLength9 = "componentLength9",
  componentLength10 = "componentLength10",
  constants1 = "constants1",
  constants2 = "constants2",
  constants3 = "constants3",
  constants4 = "constants4",
  constants5 = "constants5",
  constants6 = "constants6",
  constants7 = "constants7",
  constants8 = "constants8",
  constants9 = "constants9",
  constants10 = "constants10",
  chronologicalControl = "chronologicalControl",
  resetToZero = "resetToZero",
  sequence = "sequence",
  tableName = "tableName",
  tableAbbreviation = "tableAbbreviation",
  numerals = "numerals",
  legislation = "legislation",
  updateDate = "updateDate",
  createDate = "createDate",
  updateUser = "updateUser",
  createUser = "createUser",
  createDatetime = "createDatetime",
  updateDatetime = "updateDatetime",
  singleID = "singleID",
  ROWID = "ROWID"
}
TypeGraphQL.registerEnumType(DocumentNumbersScalarFieldEnum, {
  name: "DocumentNumbersScalarFieldEnum",
  description: undefined,
});
