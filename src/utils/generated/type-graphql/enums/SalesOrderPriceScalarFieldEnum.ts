import * as TypeGraphQL from "type-graphql";

export enum SalesOrderPriceScalarFieldEnum {
  UPDTICK_0 = "UPDTICK_0",
  salesOrder = "salesOrder",
  lineNumber = "lineNumber",
  sequenceNumber = "sequenceNumber",
  company = "company",
  category = "category",
  STRDAT_0 = "STRDAT_0",
  ENDDAT_0 = "ENDDAT_0",
  soldToCustomer = "soldToCustomer",
  shipToCustomerAddress = "shipToCustomerAddress",
  shipToCustomerContact = "shipToCustomerContact",
  billToCustomer = "billToCustomer",
  shippingSite = "shippingSite",
  salesSite = "salesSite",
  product = "product",
  productDescriptionInUserLanguage = "productDescriptionInUserLanguage",
  productDescriptionInCustomerLanguage = "productDescriptionInCustomerLanguage",
  customerProduct = "customerProduct",
  taxLevel1 = "taxLevel1",
  taxLevel2 = "taxLevel2",
  taxLevel3 = "taxLevel3",
  salesRep1 = "salesRep1",
  salesRep2 = "salesRep2",
  salesRep1CommissionRate1 = "salesRep1CommissionRate1",
  salesRep1CommissionRate2 = "salesRep1CommissionRate2",
  salesRepCommissionFactor = "salesRepCommissionFactor",
  grossPrice = "grossPrice",
  priceReason = "priceReason",
  netPrice = "netPrice",
  netPriceExcludingTax = "netPriceExcludingTax",
  netPriceIncludingTax = "netPriceIncludingTax",
  margin = "margin",
  costPrice = "costPrice",
  discountOrCharge1 = "discountOrCharge1",
  discountOrCharge2 = "discountOrCharge2",
  discountOrCharge3 = "discountOrCharge3",
  discountOrCharge4 = "discountOrCharge4",
  discountOrCharge5 = "discountOrCharge5",
  discountOrCharge6 = "discountOrCharge6",
  discountOrCharge7 = "discountOrCharge7",
  discountOrCharge8 = "discountOrCharge8",
  discountOrCharge9 = "discountOrCharge9",
  discountOrChargeReason1 = "discountOrChargeReason1",
  discountOrChargeReason2 = "discountOrChargeReason2",
  discountOrChargeReason3 = "discountOrChargeReason3",
  discountOrChargeReason4 = "discountOrChargeReason4",
  discountOrChargeReason5 = "discountOrChargeReason5",
  discountOrChargeReason6 = "discountOrChargeReason6",
  discountOrChargeReason7 = "discountOrChargeReason7",
  discountOrChargeReason8 = "discountOrChargeReason8",
  discountOrChargeReason9 = "discountOrChargeReason9",
  tax1 = "tax1",
  tax2 = "tax2",
  tax3 = "tax3",
  calculatedTaxableBase1 = "calculatedTaxableBase1",
  calculatedTaxableBase2 = "calculatedTaxableBase2",
  salesUnit = "salesUnit",
  stockUnit = "stockUnit",
  salesUnitToStockUnitConversionFactor = "salesUnitToStockUnitConversionFactor",
  productStatisticalGroup1 = "productStatisticalGroup1",
  productStatisticalGroup2 = "productStatisticalGroup2",
  productStatisticalGroup3 = "productStatisticalGroup3",
  productStatisticalGroup4 = "productStatisticalGroup4",
  productStatisticalGroup5 = "productStatisticalGroup5",
  lineStatus = "lineStatus",
  lineType = "lineType",
  freeProduct = "freeProduct",
  freeProductLineSource = "freeProductLineSource",
  salesQuote = "salesQuote",
  salesQuoteLineNumber = "salesQuoteLineNumber",
  CONNUM_0 = "CONNUM_0",
  LINREVNUM_0 = "LINREVNUM_0",
  EXPNUM_0 = "EXPNUM_0",
  SSTCOD_0 = "SSTCOD_0",
  BPCSALPRI_0 = "BPCSALPRI_0",
  CREDAT_0 = "CREDAT_0",
  UPDDAT_0 = "UPDDAT_0",
  CREUSR_0 = "CREUSR_0",
  UPDUSR_0 = "UPDUSR_0",
  CREDATTIM_0 = "CREDATTIM_0",
  UPDDATTIM_0 = "UPDDATTIM_0",
  AUUID_0 = "AUUID_0",
  INVCND_0 = "INVCND_0",
  PCNTNUM_0 = "PCNTNUM_0",
  ROWID = "ROWID"
}
TypeGraphQL.registerEnumType(SalesOrderPriceScalarFieldEnum, {
  name: "SalesOrderPriceScalarFieldEnum",
  description: undefined,
});
