# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""Data to filter addresses. All fields are optional."""
input AddressFilterInput {
  city: String
  country: String

  """Number of addresses to return."""
  limit: Int! = 10
  offset: Int = 0
  zipCode: String
}

"""Represent an address for customer or business partner"""
type AddressType {
  addressLine1: String
  addressLine2: String
  addressLine3: String
  city: String

  """Address code"""
  code: String!
  country: String
  countryName: String
  description: String
  emails: [String!]
  guid: String
  id: ID!

  """Flag to set if is default address"""
  isDefault: Int
  phones: [String!]
  state: String
  zipCode: String
}

input CustomerFilterInput {
  category: String
  country: String
  email: String
  isActive: Boolean

  """Number of customers to return."""
  limit: Int! = 100
  nameContains: String
  offset: Int = 0
}

"""Represents a paginated list of customers"""
type CustomerPaginationType {
  """Indicates if there are more pages to fetch."""
  hasNextPage: Boolean!
  nodes: [CustomerType!]!

  """Total number of items in the collection."""
  totalCount: Int!
}

"""Represents a customer in the system"""
type CustomerType {
  """List of customer addresses"""
  addresses(input: AddressFilterInput = {}): [AddressType!]
  category: String

  """Customer code"""
  customerCode: String!
  customerCurrency: String
  customerName: String
  isActive: Int
  shortName: String
}

type Query {
  """Fetches a single customer by their business code."""
  customer(customerCode: String!): CustomerType

  """Fetches a list of customers, with optional filters."""
  customers(input: CustomerFilterInput!): CustomerPaginationType!
}